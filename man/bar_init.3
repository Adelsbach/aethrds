.\" Copyright 2024, Adelsbach UG (haftungsbeschraenkt)
.\" Copyright 2014-2024, Jan Adelsbach <jan@jadelsbach.de>
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining 
.\" a copy of this software and associated documentation files
.\" (the “Software”), 
.\" to deal in the Software without restriction, including without limitation 
.\" the rights to use, copy, modify, merge, publish, distribute, sublicense, 
.\" and/or sell copies of the Software, and to permit persons to whom the 
.\" Software is furnished to do so, subject to the following conditions:
.\" 
.\" The above copyright notice and this permission notice shall be included 
.\" in all copies or substantial portions of the Software.
.\"
.\" THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS 
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
.\" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.Dd $Mdocdate: Mar 30 2025 $
.Dt bar_init 3
.Os
.Sh NAME
.Nm bar_init
.Nd initialize thread barrier
.Sh SYNOPSIS
.Lb threads
.In threadse.h
.Ft int
.Fn bar_init "bar_t *barrier" "int type" "unsigned count"
.Sh DESCRIPTION
The function
.Fn bar_init
initializes a thread barrier of the given 
.Fa type
as specified below and the amount of threads that need
to call
.Xr bar_wait 3
before the barrier will be released
.Fa count .
.Pp
The
.Fa type
argument can be either of
.Bl -tag
.It Em bar_private
the barrier is not shared among child processes.
.It Em bar_shared
the barrier is shared among child processes. 
.El
.Sh RETURN VALUES
Upon success
.Fn bar_init
returns 
.Va thrd_success , 
otherwise 
.Va thrd_error
will be returned. 
.Sh SEE ALSO
.Xr bar_destroy 3
.Xr bar_wait 3
.Sh HISTORY
The
.Fn bar_init
function first appeared in the Adelsbach Enhanced Threading Library.
MacOS support was added in version 1.0.1 due to the lack of native MacOS support
for thread barriers the implementation manually implements this using 
mutexes and condition variables.
.Sh AUTHORS
Jan Adelsbach <jan@jadelsbach.de>
