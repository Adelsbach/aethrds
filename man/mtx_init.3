.\" Copyright 2024, Adelsbach UG (haftungsbeschraenkt)
.\" Copyright 2014-2024, Jan Adelsbach <jan@jadelsbach.de>
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining 
.\" a copy of this software and associated documentation files
.\" (the “Software”), 
.\" to deal in the Software without restriction, including without limitation 
.\" the rights to use, copy, modify, merge, publish, distribute, sublicense, 
.\" and/or sell copies of the Software, and to permit persons to whom the 
.\" Software is furnished to do so, subject to the following conditions:
.\" 
.\" The above copyright notice and this permission notice shall be included 
.\" in all copies or substantial portions of the Software.
.\"
.\" THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS 
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
.\" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.Dd $Mdocdate: May 9 2020 $
.Dt mtx_init 3
.Os
.Sh NAME
.Nm mtx_init
.Nd initialize a mutex
.Sh SYNOPSIS
.Lb threads
.In threads.h
.Ft int
.Fn mtx_init "mtx_t *mtx" "int type"
.Sh DESCRIPTION
The function
.Fn mtx_init
initializes a mutex
.Fa mtx
of the given
.Fa type .
.Pp
The
.Fa type
argument can be either of
.Bl -tag
.It Em mtx_plain
a simple mutex, can be shared across child processes.
.It Em mtx_timed
a simple mutex, can be shared across child processes, allows timed locking.
.It Em mtx_plain | mtx_recursive
a simple mutex, can be shared across child processes, the
same thread can acquire the lock multiple times recursively. It must be
unlocked by an equal amount of times by the thread.
.It Em mtx_timed | mtx_recursive
a simple mutex, can be shared across child processes, allows timed locking,
the same thread can acquire the lock multiple times recursively. It must be
unlocked by an equal amount of times by the thread.
.El
.Sh RETURN VALUES
Upon success
.Fn mtx_init
returns 
.Va thrd_success , 
if there is insufficient memory it will return
.Va thrd_nomem
in case of any other error
.Va thrd_error
will be returned. 
.Sh SEE ALSO
.Xr mtx_destroy 3
.Xr mtx_lock 3
.Xr mtx_timedlock 3
.Xr mtx_trylock 3
.Xr mtx_unlock 3
.Sh HISTORY
The
.Fn mtx_init
function first appeared in the C11 standard ISO/IEC 9899:2011.
.Sh AUTHORS
Jan Adelsbach <jan@jadelsbach.de>
 
